
distmaps.c,1431
#define DUNGEON_X 10,101
#define DUNGEON_Y 11,122
#define MIN_ROOMS 12,143
#define MAX_ROOMS 13,163
#define ROOM_MIN_X 14,184
#define ROOM_MIN_Y 15,205
#define ROOM_MAX_X 16,226
#define ROOM_MAX_Y 17,248
#define SAVE_DIR 18,270
#define DUNGEON_SAVE_FILE 19,297
#define DUNGEON_SAVE_SEMANTIC 20,333
#define DUNGEON_SAVE_VERSION 21,378
#define mappair(23,411
#define mapxy(24,468
#define hardnesspair(25,503
#define hardnessxy(26,570
typedef enum __attribute__((__packed__)) terrain_type28,616
  ter_debug,30,672
  ter_wall,31,685
  ter_wall_immutable,32,697
  ter_floor,33,719
  ter_floor_room,34,732
  ter_floor_hall,35,750
  ter_stairs,36,768
  ter_stairs_up,37,782
  ter_stairs_down38,799
} terrain_type_t;39,817
typedef struct corridor_path42,837
  heap_node_t *hn;hn44,868
  uint8_t pos[pos45,887
  int32_t cost;46,905
} corridor_path_t;47,921
typedef enum dim49,941
  dim_x,51,960
  dim_y,52,969
  num_dims53,978
} dim_t;54,989
typedef int8_t pair_t[pair_t56,999
typedef struct room58,1033
  pair_t position;60,1055
  pair_t size;61,1074
} room_t;62,1089
typedef struct dungeon64,1100
  uint16_t num_rooms;66,1125
  room_t *rooms;rooms67,1147
  terrain_type_t map[map68,1164
  uint8_t hardness[hardness77,1817
  pair_t pc;78,1859
} dungeon_t;79,1872
static int32_t corridor_path_cmp(81,1886
static void non_tunneling_monstermap(86,2034
void generate_distmaps(192,4997

distmaps.h,958
# define DISTMAS_H2,19
#define DUNGEON_X 10,120
#define DUNGEON_Y 11,141
typedef struct corridor_path13,163
  heap_node_t *hn;hn15,194
  uint8_t pos[pos16,213
  uint8_t from[from17,231
  int32_t cost;18,250
} corridor_path_t;19,266
typedef enum dim21,286
  dim_x,23,305
  dim_y,24,314
  num_dims25,323
} dim_t;26,334
typedef int8_t pair_t[pair_t28,344
typedef enum __attribute__((__packed__)) terrain_type30,378
  ter_debug,32,434
  ter_wall,33,447
  ter_wall_immutable,34,459
  ter_floor,35,481
  ter_floor_room,36,494
  ter_floor_hall,37,512
  ter_stairs,38,530
  ter_stairs_up,39,544
  ter_stairs_down40,561
} terrain_type_t;41,579
typedef struct room43,598
  pair_t position;45,620
  pair_t size;46,639
} room_t;47,654
typedef struct dungeon49,665
  uint16_t num_rooms;51,690
  room_t *rooms;rooms52,712
  terrain_type_t map[map53,729
  uint8_t hardness[hardness62,1382
  pair_t pc;63,1424
} dungeon_t;64,1437

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,2820
#define DUMP_HARDNESS_IMAGES 15,245
# define rand_under(19,390
# define rand_range(23,533
# define UNUSED(24,606
#define malloc(26,637
typedef struct corridor_path 32,781
  heap_node_t *hn;hn33,812
  uint8_t pos[pos34,831
  uint8_t from[from35,849
  int32_t cost;36,868
} corridor_path_t;37,884
typedef enum dim 39,904
  dim_x,40,923
  dim_y,41,932
  num_dims42,941
} dim_t;43,952
typedef int8_t pair_t[pair_t45,962
#define DUNGEON_X 47,996
#define DUNGEON_Y 48,1030
#define MIN_ROOMS 49,1064
#define MAX_ROOMS 50,1097
#define ROOM_MIN_X 51,1131
#define ROOM_MIN_Y 52,1164
#define ROOM_MAX_X 53,1197
#define ROOM_MAX_Y 54,1231
#define SAVE_DIR 55,1265
#define DUNGEON_SAVE_FILE 56,1306
#define DUNGEON_SAVE_SEMANTIC 57,1347
#define DUNGEON_SAVE_VERSION 58,1393
#define mappair(60,1428
#define mapxy(61,1485
#define hardnesspair(62,1520
#define hardnessxy(63,1587
typedef enum __attribute__ ((__packed__)) terrain_type 65,1633
  ter_debug,66,1690
  ter_wall,67,1703
  ter_wall_immutable,68,1715
  ter_floor,69,1737
  ter_floor_room,70,1750
  ter_floor_hall,71,1768
  ter_stairs,72,1786
  ter_stairs_up,73,1800
  ter_stairs_down74,1817
} terrain_type_t;75,1835
typedef struct room 77,1854
  pair_t position;78,1876
  pair_t size;79,1895
} room_t;80,1910
typedef struct dungeon 82,1921
  uint16_t num_rooms;83,1946
  room_t *rooms;rooms84,1968
  terrain_type_t map[map85,1985
  uint8_t hardness[hardness94,2638
  pair_t pc;95,2680
} dungeon_t;96,2693
static uint32_t in_room(98,2707
static uint32_t adjacent_to_room(114,3098
static uint32_t is_open_space(122,3359
static int32_t corridor_path_cmp(127,3458
static void dijkstra_corridor(131,3608
static void dijkstra_corridor_inv(230,7345
#define hardnesspair_inv(283,8667
static int connect_two_rooms(333,11338
static int create_cycle(352,11990
static int connect_rooms(394,13555
int gaussian[gaussian407,13748
typedef struct queue_node 415,13904
  int x,416,13932
  int x, y;416,13932
  struct queue_node *next;next417,13944
} queue_node_t;418,13971
static int smooth_hardness(420,13988
static int empty_dungeon(579,18259
static int place_rooms(598,18635
static void place_stairs(635,19822
static int make_rooms(657,20457
int gen_dungeon(680,21020
void render_dungeon(693,21182
void delete_dungeon(733,22108
void init_dungeon(738,22165
int write_dungeon_map(743,22222
int write_rooms(756,22451
uint16_t count_up_stairs(778,22923
uint16_t count_down_stairs(794,23174
int write_stairs(810,23429
uint32_t calculate_dungeon_size(842,24184
int makedirectory(853,24655
int write_dungeon(888,25291
int read_dungeon_map(954,26828
int read_stairs(977,27426
int read_rooms(1000,27903
int read_dungeon(1058,29829
int read_pgm(1139,31688
void usage(1224,34091
int main(1234,34301
