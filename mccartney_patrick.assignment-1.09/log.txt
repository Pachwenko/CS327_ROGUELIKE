==8305== Memcheck, a memory error detector
==8305== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8305== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==8305== Command: ./rlg327
==8305== Parent PID: 2122
==8305== 
==8305== Conditional jump or move depends on uninitialised value(s)
==8305==    at 0x1183D8: open_inventory_slot(dungeon*) (move.cpp:101)
==8305==    by 0x118407: addToInventory(dungeon*, object*) (move.cpp:115)
==8305==    by 0x118522: pickupItems(dungeon*, short*) (move.cpp:135)
==8305==    by 0x118773: move_character(dungeon*, character*, short*) (move.cpp:181)
==8305==    by 0x119168: move_pc(dungeon*, unsigned int) (move.cpp:403)
==8305==    by 0x124F96: io_handle_input(dungeon*) (io.cpp:1419)
==8305==    by 0x118B9B: do_moves(dungeon*) (move.cpp:267)
==8305==    by 0x10C698: main (rlg327.cpp:232)
==8305== 
==8305== Conditional jump or move depends on uninitialised value(s)
==8305==    at 0x1236CA: prompt_carry_slot(dungeon*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (io.cpp:1019)
==8305==    by 0x124CA4: io_handle_input(dungeon*) (io.cpp:1351)
==8305==    by 0x118B9B: do_moves(dungeon*) (move.cpp:267)
==8305==    by 0x10C698: main (rlg327.cpp:232)
==8305== 
==8305== Conditional jump or move depends on uninitialised value(s)
==8305==    at 0x1236D0: prompt_carry_slot(dungeon*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (io.cpp:1019)
==8305==    by 0x124CA4: io_handle_input(dungeon*) (io.cpp:1351)
==8305==    by 0x118B9B: do_moves(dungeon*) (move.cpp:267)
==8305==    by 0x10C698: main (rlg327.cpp:232)
==8305== 
==8305== Conditional jump or move depends on uninitialised value(s)
==8305==    at 0x4C32CF9: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==8305==    by 0x58874D2: vfprintf (vfprintf.c:1643)
==8305==    by 0x595C168: __vsnprintf_chk (vsnprintf_chk.c:63)
==8305==    by 0x4E52416: ??? (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==8305==    by 0x4E4D9EE: vwprintw (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==8305==    by 0x4E4DC51: mvprintw (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==8305==    by 0x123D6C: list_equipment(dungeon*) (io.cpp:1104)
==8305==    by 0x124ECB: io_handle_input(dungeon*) (io.cpp:1387)
==8305==    by 0x118B9B: do_moves(dungeon*) (move.cpp:267)
==8305==    by 0x10C698: main (rlg327.cpp:232)
==8305== 
==8305== Conditional jump or move depends on uninitialised value(s)
==8305==    at 0x1236CA: prompt_carry_slot(dungeon*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (io.cpp:1019)
==8305==    by 0x124CA4: io_handle_input(dungeon*) (io.cpp:1351)
==8305==    by 0x124EB7: io_handle_input(dungeon*) (io.cpp:1383)
==8305==    by 0x124EE9: io_handle_input(dungeon*) (io.cpp:1389)
==8305==    by 0x118B9B: do_moves(dungeon*) (move.cpp:267)
==8305==    by 0x10C698: main (rlg327.cpp:232)
==8305== 
==8305== Conditional jump or move depends on uninitialised value(s)
==8305==    at 0x1236D0: prompt_carry_slot(dungeon*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (io.cpp:1019)
==8305==    by 0x124CA4: io_handle_input(dungeon*) (io.cpp:1351)
==8305==    by 0x124EB7: io_handle_input(dungeon*) (io.cpp:1383)
==8305==    by 0x124EE9: io_handle_input(dungeon*) (io.cpp:1389)
==8305==    by 0x118B9B: do_moves(dungeon*) (move.cpp:267)
==8305==    by 0x10C698: main (rlg327.cpp:232)
==8305== 
==8305== 
==8305== HEAP SUMMARY:
==8305==     in use at exit: 207,136 bytes in 349 blocks
==8305==   total heap usage: 31,808 allocs, 31,459 frees, 1,755,577 bytes allocated
==8305== 
==8305== LEAK SUMMARY:
==8305==    definitely lost: 88 bytes in 1 blocks
==8305==    indirectly lost: 0 bytes in 0 blocks
==8305==      possibly lost: 0 bytes in 0 blocks
==8305==    still reachable: 207,048 bytes in 348 blocks
==8305==         suppressed: 0 bytes in 0 blocks
==8305== Rerun with --leak-check=full to see details of leaked memory
==8305== 
==8305== For counts of detected and suppressed errors, rerun with: -v
==8305== Use --track-origins=yes to see where uninitialised values come from
==8305== ERROR SUMMARY: 17 errors from 6 contexts (suppressed: 0 from 0)
