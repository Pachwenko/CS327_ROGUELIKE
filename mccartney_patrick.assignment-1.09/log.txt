==4465== Memcheck, a memory error detector
==4465== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4465== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4465== Command: ./rlg327
==4465== Parent PID: 2945
==4465== 
==4465== Conditional jump or move depends on uninitialised value(s)
==4465==    at 0x123608: prompt_carry_slot(dungeon*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (io.cpp:1019)
==4465==    by 0x124B88: io_handle_input(dungeon*) (io.cpp:1348)
==4465==    by 0x118AD9: do_moves(dungeon*) (move.cpp:231)
==4465==    by 0x10C698: main (rlg327.cpp:232)
==4465== 
==4465== Conditional jump or move depends on uninitialised value(s)
==4465==    at 0x12360E: prompt_carry_slot(dungeon*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (io.cpp:1019)
==4465==    by 0x124B88: io_handle_input(dungeon*) (io.cpp:1348)
==4465==    by 0x118AD9: do_moves(dungeon*) (move.cpp:231)
==4465==    by 0x10C698: main (rlg327.cpp:232)
==4465== 
==4465== Conditional jump or move depends on uninitialised value(s)
==4465==    at 0x1244A1: equip_item(dungeon*, int) (io.cpp:1228)
==4465==    by 0x124BB4: io_handle_input(dungeon*) (io.cpp:1349)
==4465==    by 0x118AD9: do_moves(dungeon*) (move.cpp:231)
==4465==    by 0x10C698: main (rlg327.cpp:232)
==4465== 
==4465== 
==4465== Process terminating with default action of signal 6 (SIGABRT)
==4465==    at 0x5868E97: raise (raise.c:51)
==4465==    by 0x586A800: abort (abort.c:79)
==4465==    by 0x53158B6: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4465==    by 0x531BA05: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4465==    by 0x531BA40: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4465==    by 0x531BC73: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4465==    by 0x53177B4: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4465==    by 0x119351: std::vector<object, std::allocator<object> >::_M_range_check(unsigned long) const (stl_vector.h:825)
==4465==    by 0x11923A: std::vector<object, std::allocator<object> >::at(unsigned long) (stl_vector.h:846)
==4465==    by 0x1243E9: equip_item(dungeon*, int) (io.cpp:1225)
==4465==    by 0x124BB4: io_handle_input(dungeon*) (io.cpp:1349)
==4465==    by 0x118AD9: do_moves(dungeon*) (move.cpp:231)
==4465== 
==4465== HEAP SUMMARY:
==4465==     in use at exit: 234,235 bytes in 505 blocks
==4465==   total heap usage: 24,900 allocs, 24,395 frees, 1,424,471 bytes allocated
==4465== 
==4465== LEAK SUMMARY:
==4465==    definitely lost: 440 bytes in 5 blocks
==4465==    indirectly lost: 0 bytes in 0 blocks
==4465==      possibly lost: 144 bytes in 1 blocks
==4465==    still reachable: 233,651 bytes in 499 blocks
==4465==                       of which reachable via heuristic:
==4465==                         stdstring          : 94 bytes in 1 blocks
==4465==         suppressed: 0 bytes in 0 blocks
==4465== Rerun with --leak-check=full to see details of leaked memory
==4465== 
==4465== For counts of detected and suppressed errors, rerun with: -v
==4465== Use --track-origins=yes to see where uninitialised values come from
==4465== ERROR SUMMARY: 5 errors from 3 contexts (suppressed: 0 from 0)
