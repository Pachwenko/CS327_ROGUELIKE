==27965== Memcheck, a memory error detector
==27965== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==27965== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==27965== Command: ./rlg327 -n 5
==27965== Parent PID: 4677
==27965== 
==27965== Use of uninitialised value of size 8
==27965==    at 0x1253EA: ranged_attack(dungeon*) (io.cpp:1494)
==27965==    by 0x126059: io_handle_input(dungeon*) (io.cpp:1723)
==27965==    by 0x118E61: do_moves(dungeon*) (move.cpp:301)
==27965==    by 0x10C67F: main (rlg327.cpp:232)
==27965== 
==27965== Conditional jump or move depends on uninitialised value(s)
==27965==    at 0x126428: io_handle_input(dungeon*) (io.cpp:1884)
==27965==    by 0x118E61: do_moves(dungeon*) (move.cpp:301)
==27965==    by 0x10C67F: main (rlg327.cpp:232)
==27965== 
==27965== 
==27965== HEAP SUMMARY:
==27965==     in use at exit: 213,359 bytes in 351 blocks
==27965==   total heap usage: 281,810 allocs, 281,459 frees, 6,002,263 bytes allocated
==27965== 
==27965== LEAK SUMMARY:
==27965==    definitely lost: 0 bytes in 0 blocks
==27965==    indirectly lost: 0 bytes in 0 blocks
==27965==      possibly lost: 0 bytes in 0 blocks
==27965==    still reachable: 213,359 bytes in 351 blocks
==27965==         suppressed: 0 bytes in 0 blocks
==27965== Rerun with --leak-check=full to see details of leaked memory
==27965== 
==27965== For counts of detected and suppressed errors, rerun with: -v
==27965== Use --track-origins=yes to see where uninitialised values come from
==27965== ERROR SUMMARY: 8 errors from 2 contexts (suppressed: 0 from 0)
